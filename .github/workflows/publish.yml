env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
jobs:
  apt:
    if: github.ref_type == 'tag'
    name: APT
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Get the version
        run: |
          ref=${{ github.ref }}
          echo "VERSION=${ref#refs/tags/v" | tee -a $GITHUB_ENV
        shell: bash
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-buildx-apt-${{ github.sha }}
          path: /tmp/.buildx-apt-cache
          restore-keys: |
            ${{ runner.os }}-buildx-apt-
      - name: Build a docker image
        uses: docker/build-push-action@v3
        with:
          build-args: VERSION=${{ env.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-apt-cache
          cache-to: type=local,dest=/tmp/.buildx-apt-cache-new,mode=max
          context: .
          file: conf/apt/Dockerfile
          push: false
          tags: |
            ${{ env.IMAGE_NAME }}:apt
      - name: Move cache
        run: |
          rm -fr /tmp/.buildx-apt-cache
          mv /tmp/.buildx-apt-cache-new /tmp/.buildx-apt-cache
      - name: Extract .deb files
        run: |
          docker run \
              --rm \
              ${{ env.IMAGE_NAME }}:apt \
              sh -c 'tar -cf - *.deb' \
            | tar -vxf -
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}
          path: |
            wol_${{ env.VERSION }}_amd64.deb
            wol_${{ env.VERSION }}_arm64.deb
            wol_${{ env.VERSION }}_armhf.deb
            wol_${{ env.VERSION }}_i386.deb
  docker:
    if: github.ref_type == 'tag'
    name: Docker
    needs: apt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - id: version
        name: Get the version
        run: |
          ref=${{ github.ref }}
          version=${ref#refs/tags/v}
          minor=${version%\.[0-9]*}
          major=${minor%\.[0-9]*}
          echo "MAJOR_VERSION=$major" | tee -a $GITHUB_ENV
          echo "MINOR_VERSION=$minor" | tee -a $GITHUB_ENV
          echo "VERSION=$version" | tee -a $GITHUB_ENV
        shell: bash
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          path: /tmp/.buildx-cache
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
      - name: Build a docker image and push it
        uses: docker/build-push-action@v3
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          context: .
          file: conf/hub/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.MAJOR_VERSION }}
            ${{ env.IMAGE_NAME }}:${{ env.MINOR_VERSION }}
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      - name: Move cache
        run: |
          rm -fr /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - id: overview
        name: Load README.md
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('node:fs')
            fs.readFile(
              'README.md',
              {},
              (error, data) => {
                if (error)
                  core.setFailed(error.message)
                else
                  core.setOutput('content', data.toString())
              }
            )
      - name: Patch the description to Docker Hub
        uses: kei-g/dockerhub-patch@main
        with:
          description: Wake-On-LAN Client
          overview: |
            ${{ steps.overview.outputs.content }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repo: ${{ github.event.repository.name }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
name: Publish
on:
  create:
    tags:
      - v[0-9]+(\.[0-9]+){2}
